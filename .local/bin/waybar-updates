#!/usr/bin/env bash

awk_escape_nl='{ printf "\t%s\\n", $0 }'
pac=$(checkupdates)
pac_count=$(echo "$pac" | wc -l)
pac_info=$(echo "$pac" | awk "${awk_escape_nl}")

aur=$(yay -Qua)
aur_count=$(echo -n "$aur" | wc -l)
aur_info=$(echo "$aur" | awk "$awk_escape_nl")

fwupd_jq_simplify=".Devices[] | { dev: .Name, count: (.Releases|length|tostring), updates: [.Releases[] | {name: .Summary, ver: .Version, desc: .Description}] }"
fwupd_jq_finalout='.count+" "+.dev, (.updates[]|"   - "+.ver+": "+.name)'
fwupd=$(fwupdmgr get-updates --json | jq "${fwupd_jq_simplify}" 2> /dev/null)
fwupd_count=$(echo "$fwupd" | jq '.updates[].ver' | wc -l)
fwupd_info=$(echo "$fwupd" | jq --raw-output "${fwupd_jq_finalout}" | awk "${awk_escape_nl}")

status=""
if ((pac_count > 0 || aur_count > 0)); then
  if ((aur_count > 0)); then
    status="*"
  else
    status=""
  fi
fi

if ((fwupd_count > 0)); then
  status="${status} "
fi

((fwupd_count > 0)) && tooltip+="($fwupd_count) firmware:\n$fwupd_info\n"
((aur_count > 0)) && tooltip+="($aur_count) aur:\n$aur_info\n"
((pac_count > 0)) && tooltip+="($pac_count) pacman:\n$pac_info"

if [[ "$status" != "" ]]; then
  echo "{\"text\": \"$status\",\"tooltip\":\"$tooltip\"}"
fi
