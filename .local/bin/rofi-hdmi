#!/usr/bin/env bash

icon= 
title=HDMI Output

# TODO: don't hardcode
# TODO: support for multipe outputs
output=HDMI-A-1

get_hdmi() {
  echo $(swaymsg -t get_outputs | \
    jq '.[] | select(type == "object" and .name == "'"$output"'")')
}

display_current_mode() {
  hdmi_output=$(get_hdmi)
  current_width=$(echo $hdmi_output | jq '.current_mode.width')
  current_height=$(echo $hdmi_output | jq '.current_mode.height')
  current_resolution=$(echo $hdmi_output | jq '.current_mode.refresh / 1000')
  echo -en "\0message\x1fCurrent mode: \
  ${current_width}x${current_height} @ ${current_resolution}Hz\n"
}

print_divider() {
  echo -en " \0nonselectable\x1ftrue\n"
}

list_resolutions_only() {
  echo -en "  List detected modes...\0info\x1fmodes\n"
  print_divider

  echo -en $(echo $(get_hdmi) | \
  jq -rj '.modes | unique_by(.width) | .[] |
  .width, "x", .height, "\\0info\\x1f", .width, ":", .height, "\\n"')
}

# TODO: would be good to prune out duplicates
list_modes() {
  echo -en "  Back to resoultions only...\0info\x1fresolutions\n"
  print_divider

  echo -en $(echo $(get_hdmi) | \
  jq -rj '.modes | .[] |
  .width, "x", .height, " @ ", .refresh / 1000, "Hz
  \\0info\\x1f", .width, ":", .height, ":", .refresh / 1000, "\\n"')
}

echo -en "\0prompt\x1f$icon $title\n"
display_current_mode

if [[ $ROFI_RETV == 0 ]]; then
  hdmi_output=$(get_hdmi)

  if [[ ! -z "$hdmi_output" ]]; then
    list_resolutions_only
  else
    echo -en "\0message\x1fThe output ($output) is not connected."
  fi

elif [[ $ROFI_RETV == 1 ]]; then
  case $ROFI_INFO in
    modes)
      list_modes
      ;;
    resolutions)
      list_resolutions_only
      ;;
    *)
      # // means global replace
      # we replace ':' with ' '
      # space delimited string interpreted as array
      mode=(${ROFI_INFO//:/ })
      if [[ ${mode[2]} ]]; then
        echo "has refresh"
        swaymsg output $output mode ${mode[0]}x${mode[1]}@${mode[2]}
      else
        swaymsg output $output mode ${mode[0]}x${mode[1]}
      fi
      ;;
  esac
fi
