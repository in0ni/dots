#!/bin/bash
#

INACTIVE=inactive
FS=": "

status=$(systemctl --user is-active wlsunset.service)
modeline=$(gammastep -p 2>&1 | sed 's/Notice: //g')

period=$(echo "$modeline" | awk -F "$FS" '
  /^Period: Transition/{
    dig=gensub(/Transition.*([0-9]i)[0-9]?\.[0-9][0-9]?%.*/, "\\1", "G", $2);
    if (dig < 5) print "Transition Night"
    else print "Transition Day"
    exit
  }
  /^Period/{ print $2}
')

# TODO: need update module (use signal?)
toggle_service() {
  if [[ "$status" == "$INACTIVE" ]]; then
    systemctl --user start wlsunset.service
  else
    systemctl --user stop wlsunset.service
  fi
}

status_waybar() {
  tooltip=$(echo "$modeline" | awk -F "$FS" '
    /^Location/{
      printf " %s   ", $2
    }
    /^Solar elevation/{
      printf " %s ", $2
    }
  ')

  tooltip="$tooltip ($period)"

  case $period in
    Daytime)
      percentage="0"
      ;;
    "Transition Day")
      percentage="34"
      ;;
    "Transition Night")
      percentage="67"
      ;;
    Night)
      percentage="100"
      ;;
    *)
      echo "Unable to parse gammastep period to percentage"
      exit 1
      ;;
  esac

  echo "{\"percentage\":$percentage,\"tooltip\":\"$tooltip\",\"class\":\"$status\"}"
}

colorscheme_kak() {
  if [[ "$period" =~ Night$ ]]; then
    variant="dark"
  else
    variant="light"
  fi

  echo "gruv-$variant-hard"
}

case "$1" in
  toggle)
    toggle_service
    ;;
  waybar)
    status_waybar
    ;;
  kak)
    colorscheme_kak
    ;;
  *)
    echo -e "Usage: $(basename $0) {toogle|waybar|kak}\n"
    echo -e "toggle\t\t print systemd service"
    echo -e "waybar\t\t print waybar json data"
    echo -e "kak\t\t theme variant"
    exit 1
    ;;
esac
