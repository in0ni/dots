#!/usr/bin/env bash

icon=ï‘±
title="Helix Projects"
# icon_notify=dialog-password-panel
source "$(dirname "$0")/common/utils" "$icon" "$title"

set_title "$title"

# manually managed projects
projs=~/.config/hxi.projs

# automatically scanned directory
uw2=~/Work/un/repos

helix_cd() {
  kitten="dispatch exec kitty -d='$1'"
  hx="$kitten -T '[$2] - hx' --hold helix"
  term1="$kitten -T '[$2] - t1'"
  term2="$kitten -T '[$2] - t2'"

  # create 3 pane window layout
  # NOTE: 0.2s is appropriate wait for dispatches to trigger once previous command completes
  coproc {
    hyprctl "$hx"
    sleep 0.2s
    hyprctl "$term1"
    sleep 0.2s
    hyprctl "dispatch togglesplit"
    sleep 0.2s
    hyprctl "$term2"
    sleep 0.2s
    hyprctl "dispatch resizeactive 0 60%"
    hyprctl "dispatch movefocus u"
  }
}

# initial list
if [[ $ROFI_RETV == 0 ]]; then
  projs_file=$(awk -F':' '{
    printf "%s (%s)\\0info\x1f%s:%s\n", $2, $1, $1, $2
  }' <"$projs")

  projs_uw2=$(fd 'UW2' "$uw2" -d1 -td |
    awk -F'/' '{
    printf "%s\\0info\x1f%s:%s\n", $(NF-1), $0, $(NF-1)
  }')

  projs_base=$(fd -H --regex '^.uw-.+-git$' "$uw2" -d1 -td |
    awk -F'/' '{
    name=$(NF-1)
    name=gensub(/\.uw-/, "", "g", name)
    name=gensub(/-git/, "", "g", name)
    printf "%s\\0info\x1f%s:%s\n", name, $0, name
  }')

  echo -en "$projs_file"
  print_divider
  echo -en "$projs_uw2"
  echo -en "$projs_base"
fi

if [[ $ROFI_RETV == 1 ]]; then
  IFS=":" read -r -a data <<<"$ROFI_INFO"
  helix_cd "${data[0]}" "${data[1]}"
fi
