[language-server.llm-lsp]
command = "llm-lsp"
args = ["server", "-p", "codeium"]

#
# efm-langserver (custom linters for diagnostics)
#
[language-server.efm-langserver]
command = "efm-langserver"

[language-server.efm-langserver.config]
# only for phpcbf, unable to get working w/o this
documentFormatting = true

[language-server.efm-langserver.config.languages]

# stylelint
[[language-server.efm-langserver.config.languages.css]]
lintCommand = "npx --no-install stylelint --formatter unix --stdin-filename=${INPUT}"
lintStdin = true
lintFormats = [
  "%f:%l:%c: %m [%trror]",
  "%f:%l:%c: %m [%tarning]",
]

# stylelint
[[language-server.efm-langserver.config.languages.scss]]
lintCommand = "npx --no-install stylelint --formatter unix --stdin-filename=${INPUT}"
lintStdin = true
lintFormats = [
  "%f:%l:%c: %m [%trror]",
  "%f:%l:%c: %m [%tarning]",
]

# stylelint
# [[language-server.efm-langserver.config.languages.less]]
# lintCommand = "npx --no-install stylelint --formatter unix --stdin-filename=${INPUT}"
# lintStdin = true
# lintFormats = [
#   "%f:%l:%c: %m [%trror]",
#   "%f:%l:%c: %m [%tarning]",
# ]

# eslint
# TODO: consider vscode-eslint-language-server
[[language-server.efm-langserver.config.languages.javascript]]
lintCommand = "npx --no-install eslint --format visualstudio --stdin --stdin-filename ${INPUT}"
lintStdin = true
lintFormats = [
  "%f(%l,%c): %trror %m",
  "%f(%l,%c): %tarning %m",
]

# phpcs/phpcbf
[[language-server.efm-langserver.config.languages.php]]
# issues using helix default "format" command
formatCommand = "phpcbf -q --stdin-path=${INPUT} - || true"
formatStdin = true
lintCommand = "phpcs --report=\"emacs\" --stdin-path=${INPUT} -"
lintStdin = true
lintFormats = [
  "%f:%l:%c: %rror - %m",
  "%f:%l:%c: %tarning - %m"
]

# twig-cs-fixer
[[language-server.efm-langserver.config.languages.twig]]
formatStdin = false
lintCommand = "twig-cs-fixer --fix --no-interaction --report=github ${INPUT}"
lintStdin = true
lintFormats = [
  "::error file=%f,line=%l,col=%c::%m",
  "::warning file=%f,line=%l,col=%c::%m",
]
lintIngoreExitCode = true

# phpactor (intelephense requires license for all useful features)
[language-server.phpactor]
command = "phpactor"
args = [
  "language-server",
  # Workaround for https://github.com/phpactor/phpactor/issues/2648
  "--config-extra={ \"language_server_completion.trim_leading_dollar\": true }"
]

#
# Sass/scss
#
[language-server.some-sass-lsp]
command="some-sass-language-server"
args = ["--stdio"]

[language-server.some-sass-lsp.config]
somesass = { suggestFromUseOnly = true, loadPaths = ["web/themes/uw/un2_theme"] }

#
# Emmet
#
[language-server.emmet-ls]
args = ["--stdio"]
command="emmet-ls"

#
# Vue
#
[language-server.vuels]
command = "vue-language-server"
args = ["--stdio"]
config = { typescript = { tsdk = "/usr/lib/node_modules/typescript/lib/" } }

#
# cspell
#
[language-server.cspell]
command="cspell-lsp"
args = ["--stdio"]

#
# Language configuration
#
[[language]]
name="javascript"
auto-format=true
formatter = { command = "npx", args = ["--no-install", "prettier", "--stdin-filepath ${INPUT}", "--parser", "typescript"] }
language-servers = [
  "cspell",
  "llm-lsp",
  { name = "typescript-language-server", except-features = ["format"] },
  # eslint
  { name = "efm-langserver", except-features = ["format"] },
]

[[language]]
name="json"
auto-format=true
formatter = { command = "npx", args = ["--no-install", "prettier", "--stdin-filepath ${INPUT}", "--parser", "json"] }

[[language]]
name="css"
auto-format=true
formatter = { command = "npx", args = ["--no-install", "prettier", "--stdin-filepath ${INPUT}", "--parser", "css"] }
language-servers = [
  "cspell",
  { name = "vscode-css-language-server", except-features=["format"] },
  # stylelint
  { name = "efm-langserver", only-features = ["diagnostics"] },
  { name = "emmet-ls", only-features = ["completion"] },
]

[[language]]
name="scss"
auto-format=true
formatter = { command = "npx", args = ["--no-install", "prettier", "--stdin-filepath ${INPUT}", "--parser", "scss"] }
language-servers = [
  "cspell",
  "llm-lsp",
  { name = "some-sass-lsp", except-features = ["format"] },
  { name = "vscode-css-language-server", except-features = ["format"] },
  # stylelint
  { name = "efm-langserver", except-features = ["format"] },
  { name = "emmet-ls", only-features = ["completion"] },
]

[[language]]
name="html"
auto-format=true
formatter = { command = "npx", args = ["--no-install", "prettier", "--stdin-filepath ${INPUT}", "--parser", "html"] }
language-servers = [
  "cspell",
  "llm-lsp",
  { name = "vscode-html-language-server", except-features = ["format"] },
  { name = "emmet-ls", only-features = ["completion"] },
]

[[language]]
name="xml"
auto-format=true
formatter = { command = "npx", args = ["--no-install", "prettier", "--stdin-filepath ${INPUT}", "--parser", "html"] }

[[language]]
name="yaml"
auto-format=false
formatter = { command = "npx", args = ["--no-install", "prettier", "--stdin-filepath ${INPUT}", "--parser", "yaml"] }
language-servers = ["cspell", "llm-lsp"]

[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
"'" = "'"
"<" = ">"
"%" = "%"
"#" = "#"

[[language]]
name="vue"
auto-format=true
formatter = { command = "npx", args = ["--no-install", "prettier", "--stdin-filepath ${INPUT}", "--parser", "vue"] }
language-servers = [
  "cspell",
  "vuels",
  "llm-lsp",
  { name = "typescript-language-server", except-features = ["format"] },
  { name = "emmet-ls", only-features = ["completion"] },
]

[[language]]
name="svelte"
auto-format=true
formatter = { command = "npx", args = ["--no-install", "prettier", "--stdin-filepath ${INPUT}", "--parser", "svelte"] }
language-servers = [
  "cspell",
  "llm-lsp",
  { name = "svelteserver", except-features=["format"] },
  { name = "emmet-ls", only-features = ["completion"] },
]

[[language]]
name="php"
auto-format=true
# add drupal types
file-types = ["php", "inc", "theme", "module", "profile", "install"]
# issues using helix default "format" command
# formatter = { command = "phpcbf", args = ["-q", "--stdin-path=${INPUT}", "-"] }
language-servers = [
  "cspell",
  "llm-lsp",
 { name = "phpactor", except-features = ["format"] },
 # phpcs & phpcbf
 { name = "efm-langserver", only-features = ["diagnostics", "format"] },
]

[[language]]
name="twig"
auto-format=true
formatter = { command = "npx", args = ["--no-install", "prettier", "--stdin-filepath ${INPUT}", "--parser", "melody"] }
language-servers = [
  "cspell",
  "llm-lsp",
  { name = "emmet-ls", only-features = ["completion"] },
  { name = "efm-langserver", except-features = ["format"] },
]


[[language]]
name="python"
auto-format=true
formatter = { command = "black", args = ["-"] }
language-servers = [
  "cspell",
  "llm-lsp",
 { name = "pylsp", except-features = ["format"] },
 { name = "efm-langserver", only-features = ["diagnostics"] },
]

[[language]]
name = "bash"
auto-format = true
language-servers = [
  "cspell",
  "llm-lsp",
  "bash-language-server"
]

[[language]]
name = "markdown"
auto-format = true
language-servers = [
  "cspell",
  "llm-lsp",
]

[[language]]
name = "markdown"
auto-format = true
language-servers = [
  "cspell",
  "llm-lsp",
]

# [[language]]
# name = "text"
# auto-format = true
# language-servers = [
#   "cspell",
# ]

#
# shebangs
# helps with filetype detection for dotfiles & other configs
#
[[language]]
name = "ini"
shebangs = ["ini"]

[[language]]
name = "hocon"
shebangs = ["hocon"]
